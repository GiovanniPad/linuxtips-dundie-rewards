name: CI

on: 
    push:
        branches:
            - "main"
    pull_request:
        branches:
            - "main"

permissions: 
  checks: write
  pull-requests: write

jobs:
  lint:
    strategy:
      fail-fast: true
      matrix:
        python-version: ['3.13']
        os: [ubuntu-latest]
    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{matrix.python-version}}
      - name: Install uv
        uses: astral-sh/setup-uv@v3
      - name: Loop for style errors
        run: uv run task lint
      - name: Check for importing style
        run: uvx ruff format --diff dundie tests integration

  tests:
    needs: lint
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.13']
        os: [ubuntu-latest]
    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{matrix.python-version}}
      - name: Install uv
        uses: astral-sh/setup-uv@v3
      - name: Set up Python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }}
      - name: Run tests
        run: uv run --extra test pytest -v --cov=dundie --junitxml=test-results.xml --forked
      - name: publish junit results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: |
            test-results/**/*.xml
            test-results/**/*.trx
            test-results/**/*.json